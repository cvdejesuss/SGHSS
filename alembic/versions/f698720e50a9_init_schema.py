# alembic/script.py.mako

"""init schema

Revision ID: f698720e50a9
Revises: 
Create Date: 2025-08-27 23:50:16.157273

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f698720e50a9'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=160), nullable=False),
    sa.Column('category', sa.String(length=80), nullable=True),
    sa.Column('unit', sa.String(length=8), nullable=False),
    sa.Column('min_stock', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_items_category'), ['category'], unique=False)
        batch_op.create_index('ix_items_category_name', ['category', 'name'], unique=False)
        batch_op.create_index(batch_op.f('ix_items_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_items_name'), ['name'], unique=True)

    op.create_table('patients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=160), nullable=False),
    sa.Column('cpf', sa.String(length=14), nullable=True),
    sa.Column('birth_date', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('patients', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_patients_cpf'), ['cpf'], unique=True)
        batch_op.create_index(batch_op.f('ix_patients_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_patients_name'), ['name'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=160), nullable=False),
    sa.Column('email', sa.String(length=160), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=32), nullable=False),
    sa.Column('cpf', sa.String(length=14), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_cpf'), ['cpf'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index('ix_users_email_role', ['email', 'role'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_role'), ['role'], unique=False)

    op.create_table('appointments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('professional_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('reason', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("status in ('SCHEDULED','DONE','CANCELED','NOSHOW')", name='ck_appointment_status'),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['professional_id'], ['users.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('appointments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_appointments_date'), ['date'], unique=False)
        batch_op.create_index(batch_op.f('ix_appointments_id'), ['id'], unique=False)
        batch_op.create_index('ix_appointments_patient_date', ['patient_id', 'date'], unique=False)
        batch_op.create_index(batch_op.f('ix_appointments_patient_id'), ['patient_id'], unique=False)
        batch_op.create_index('ix_appointments_professional_date', ['professional_id', 'date'], unique=False)
        batch_op.create_index(batch_op.f('ix_appointments_professional_id'), ['professional_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_appointments_status'), ['status'], unique=False)

    op.create_table('records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('professional_id', sa.Integer(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['professional_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('records', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_records_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_records_patient_id'), ['patient_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_records_professional_id'), ['professional_id'], unique=False)

    op.create_table('stock_movements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=8), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('reason', sa.String(length=160), nullable=True),
    sa.Column('lot', sa.String(length=64), nullable=True),
    sa.Column('expiration_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.CheckConstraint("type in ('IN','OUT')", name='ck_stock_mov_type'),
    sa.CheckConstraint('quantity > 0', name='ck_stock_mov_quantity_positive'),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('stock_movements', schema=None) as batch_op:
        batch_op.create_index('ix_stock_item_created_at', ['item_id', 'created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_stock_movements_expiration_date'), ['expiration_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_stock_movements_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_stock_movements_item_id'), ['item_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_stock_movements_user_id'), ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('stock_movements', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_stock_movements_user_id'))
        batch_op.drop_index(batch_op.f('ix_stock_movements_item_id'))
        batch_op.drop_index(batch_op.f('ix_stock_movements_id'))
        batch_op.drop_index(batch_op.f('ix_stock_movements_expiration_date'))
        batch_op.drop_index('ix_stock_item_created_at')

    op.drop_table('stock_movements')
    with op.batch_alter_table('records', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_records_professional_id'))
        batch_op.drop_index(batch_op.f('ix_records_patient_id'))
        batch_op.drop_index(batch_op.f('ix_records_id'))

    op.drop_table('records')
    with op.batch_alter_table('appointments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_appointments_status'))
        batch_op.drop_index(batch_op.f('ix_appointments_professional_id'))
        batch_op.drop_index('ix_appointments_professional_date')
        batch_op.drop_index(batch_op.f('ix_appointments_patient_id'))
        batch_op.drop_index('ix_appointments_patient_date')
        batch_op.drop_index(batch_op.f('ix_appointments_id'))
        batch_op.drop_index(batch_op.f('ix_appointments_date'))

    op.drop_table('appointments')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_role'))
        batch_op.drop_index(batch_op.f('ix_users_name'))
        batch_op.drop_index(batch_op.f('ix_users_id'))
        batch_op.drop_index('ix_users_email_role')
        batch_op.drop_index(batch_op.f('ix_users_email'))
        batch_op.drop_index(batch_op.f('ix_users_cpf'))

    op.drop_table('users')
    with op.batch_alter_table('patients', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_patients_name'))
        batch_op.drop_index(batch_op.f('ix_patients_id'))
        batch_op.drop_index(batch_op.f('ix_patients_cpf'))

    op.drop_table('patients')
    with op.batch_alter_table('items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_items_name'))
        batch_op.drop_index(batch_op.f('ix_items_id'))
        batch_op.drop_index('ix_items_category_name')
        batch_op.drop_index(batch_op.f('ix_items_category'))

    op.drop_table('items')
    # ### end Alembic commands ###
